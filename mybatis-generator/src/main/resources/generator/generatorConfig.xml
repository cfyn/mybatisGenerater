<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--
    特别注意：
        maven命令生成时 执行前 需要 先把 mybatis-generator-api打jar包 ， 需要用到可执行jar
        -->

    <!--配置文件路径-->
    <properties resource="generator/config.properties"/>
    <!--2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；-->
    <context id="Mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!--继承通用mapper-->
        <plugin type="${mapper.plugin}">
            <!--通用mapper类路径-->
            <property name="mappers" value="${mapper.Mapper}"/>
        </plugin>
        <!--支持lombok-->
        <plugin type="com.cf.provider.mybatis.generator.LombokPlugin"/>
        <!--修改javaDoc 为 @api 注释-->
        <commentGenerator type="com.cf.provider.mybatis.generator.MyCommentGenerator">
            <property name="addFieldComment" value="true"/>
        </commentGenerator>
        <!--数据库配置-->
        <jdbcConnection driverClass="${jdbc.driverClass}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.user}"
                        password="${jdbc.password}">
            <!--introspectedTable.getRemarks() 取值为空时 添加下属性  需要在url 里指定编码 utf8  如：mysql  ?characterEncoding=utf8   -->
            <!-- 针对oracle数据库 -->
            <!--<property name="remarksReporting" value="true"></property>-->
            <!--针对mysql数据库-->
            <property name="useInformationSchema" value="true" />
        </jdbcConnection>
        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver type="com.cf.provider.mybatis.generator.MyJavaTypeResolverImpl">
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <javaModelGenerator targetPackage="${targetModelPackage}" targetProject="${targetJavaProject}">
            <!-- 继承类-->
            <property name="rootClass" value="com.cf.provider.model.entity.BaseEntity"/>
        </javaModelGenerator>
        <!--pom里配置 可提出-->
        <sqlMapGenerator targetPackage="${targetXMLPackage}"  targetProject="${targetResourcesProject}"/>

        <javaClientGenerator targetPackage="${targetMapperPackage}" targetProject="${targetJavaProject}" type="XMLMAPPER" />

        <!--<table tableName="%" >-->
            <!--<generatedKey column="id" sqlStatement="Mysql" identity="true"/>-->
        <!--</table>-->
        <!--全表生成-->
        <table tableName="%" >
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
        <!--单表生成-->
        <!-- tableName 表名-->
        <!--domainObjectName 生成的实体类名-->
        <!--<table tableName="policy_customer_info"-->
               <!--domainObjectName="PolicyCustomerInfoEntity"-->
               <!--enableCountByExample="false"-->
               <!--enableUpdateByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableSelectByExample="false" selectByExampleQueryId="false">-->
            <!--<property name="runtime" value="true"/>-->
            <!--&lt;!&ndash;<property name="modelOnly" value="true"/>&ndash;&gt;-->
            <!--<generatedKey column="id" sqlStatement="JDBC" identity="true"/>-->
        <!--</table>-->
    </context>
</generatorConfiguration>